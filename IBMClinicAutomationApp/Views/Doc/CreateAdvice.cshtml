@model IBMClinicAutomationApp.Models.advice

@{
    ViewBag.Title = "CreateAdvice";
}

<h2>CreateAdvice</h2>




@using (Html.BeginForm())
{


    <div id="datalistDrugs" hidden>

        @foreach (var item in ViewBag.Drugs)
        {
            <option value="@item.drugID">@item.name </option>
        }

    </div>


    <div class="form-horizontal">
        <h4>Advice</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.advice1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.advice1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.advice1, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <span class="control-label col-md-2" >Patient Name</span>
           
            <div class="col-md-10">

                <input type="text" readonly class="form-control" value="@(ViewBag.PatientName as string)" />
                <input type="hidden" name="AppointmentID" value="@(ViewBag.AppointmentID as string)" />
                <input type="hidden" name="PatientID" value="@(ViewBag.PatientID as string)" />

            </div>
        </div>


    </div>

    <table id="tblDrugLine" class="table">
        <tr>
            <th>
                Sl. No.
            </th>
            <th>
                @Html.DisplayNameFor(model => model.prescriptions.First().drug.name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.prescriptions.First().dosage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.prescriptions.First().note)
            </th>

            <th></th>
        </tr>


        <tr>
            <td class="slno">
                1
            </td>
            <td>
                <select drugCombo="unbound" class="form-control" name="prescriptions[0].DrugID">
                </select>
            </td>
            <td>
                <input type="text" class="form-control" name="prescriptions[0].dosage">
            </td>
            <td>
                <input type="text" class="form-control" name="prescriptions[0].note">
            </td>

            <td class="addnewRowTD">
                <button id="AddNewRow" type="submit" class="btn btn-primary mb-3">Add New Row</button>
            </td>
        </tr>


    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add PO" class="btn btn-primary" />
        </div>
    </div>


}







@section Scripts
{

    <script>

        var _SlNo = 0




        $(function () {


            BindAddNewButton()


        })

        function BindAddNewButton() {




            $("#AddNewRow").click(function (e) {
                e.preventDefault()
                _SlNo++

                $.ajax({
                    url: "/Doc/CreatePrescriptionLine/" + _SlNo, // Controller endpoint
                    type: "GET",

                    success: function (data) {
                        $(".addnewRowTD").html(" ")

                        $("#tblDrugLine").append(data);

                        BindAddNewButton()


                    },
                    error: function () {
                        $("#Notify").html("<p>Error loading details.</p>");
                    }
                });



            })

            $("select[drugCombo*='unbound']").html($("#datalistDrugs").html()).attr("drugCombo", "bound")
        }






    </script>


}